name: Deploy Cloudflare Worker

on:
    push:
        branches:
            - main

jobs:
    deploy:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Install Cloudflare Workers CLI and tomlq
              run: |
                npm install -g wrangler
                pip install yq


            - name: Install dependencies
              run: npm install --production

            - name: Make the request to determine the subdomain
              id: determine_subdomain
              env: 
                CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_KEY }}
                CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
              run: |
                curl -X GET "https://api.cloudflare.com/client/v4/accounts/$CLOUDFLARE_ACCOUNT_ID/workers/subdomain" \
                -H "Authorization: Bearer $CLOUDFLARE_API_TOKEN" | jq -r '.result.subdomain' | echo result=$(cat) >> $GITHUB_OUTPUT
            
            - name: Parse toml to get worker name
              id: determine_worker_name
              run: |
                tomlq -r .name ./wrangler.toml | echo result=$(cat) >> $GITHUB_OUTPUT
            
            - name: Initialize the D1 database
              env:
                CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_KEY }}
                CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
              run: |
                wrangler d1 execute DB --file init.sql

            - name: Build and deploy worker
              id: deploy_worker
              env:
                CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_KEY }}
                CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
              run: |
                wrangler deploy
                echo "${{ secrets.TELEGRAM_BOT_TOKEN }}" | wrangler secret put TELEGRAM_BOT_TOKEN
                INIT_SECRET=$(openssl rand -base64 32)
                echo $INIT_SECRET | wrangler secret put INIT_SECRET
                echo init_secret=$INIT_SECRET >> $GITHUB_OUTPUT
                echo domain=${{ steps.determine_worker_name.outputs.result }}.${{ steps.determine_subdomain.outputs.result }}.workers.dev >> $GITHUB_OUTPUT

            - name: Deploy webapp to Cloudflare Pages
              working-directory: ./webapp
              env:
                CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_KEY }}
                CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
              run: |
                npm pages:deploy --project-name ${{ steps.determine_worker_name.outputs.result }}
            - name: Send init command to worker
              run: |
                curl -X POST -H "Authorization: Bearer ${{ steps.deploy_worker.outputs.init_secret }}" \
                 -H "Content-Type: application/json" \
                 -d '{"externalUrl": "https://${{ steps.deploy_worker.outputs.domain }}"}' \
                 https://${{ steps.deploy_worker.outputs.domain }}/init
